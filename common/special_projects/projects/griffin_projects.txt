                                                                                                                                          
sp_griffin_commanding_tactical_doll = {
	specialization = specialization_griffin

	project_tags = sp_tag_griffin

	ai_will_do = {
		base = 1
	}

	allowed = {
		always = yes
	}
	
	available = {
		FROM = {
			has_tech = tactical_doll
		}
	}

	breakthrough_cost = {
		specialization_griffin = 1
	}
	resource_cost = {
		resources = { 
			steel = 2
		}
	}
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			unlock_decision_tooltip = GAK_commanding_tactical_doll
			GAK_unit_leader_var = yes
		}
	}

	generic_prototype_rewards = {
		sp_griffin_generic_reward_scientist_xp_1
		sp_griffin_generic_reward_scientist_xp_2
		sp_griffin_generic_reward_scientist_xp_3
		sp_griffin_generic_reward_army_xp_1
		sp_griffin_generic_reward_army_xp_2
		sp_griffin_generic_reward_army_xp_3
		sp_griffin_generic_reward_major_progress_1
		sp_griffin_generic_reward_major_progress_2
		sp_griffin_generic_reward_major_progress_3
		sp_griffin_generic_reward_test_failure_1
		sp_griffin_generic_reward_test_failure_2
		sp_griffin_generic_reward_test_failure_3
		sp_griffin_generic_reward_resource_scarcity
	}
}
sp_griffin_digi_mind_update = {
	specialization = specialization_griffin

	project_tags = sp_tag_griffin

	ai_will_do = {
		base = 1
	}

	allowed = {
		always = yes
	}
	
	available = {
		FROM = {
			has_tech = tactical_doll1
		}
	}
	special_project_parent = {
		sp_griffin_commanding_tactical_doll
	}

	breakthrough_cost = {
		specialization_griffin = 1
	}
	resource_cost = {
		resources = { 
			steel = 3
		}
	}
	prototype_time = sp_time.prototype.medium

	complexity = sp_complexity.medium
	
	project_output = {
		country_effects = {
			set_country_flag = GAK_sp_griffin_digi_mind_update
			unlock_decision_tooltip = GAK_digi_mind_update
			set_portraits = {
				character = GAK_HK416
				army = { large = "GFX_portrait_gak_HK416_mod" }
			}
			hidden_effect = {
				random_unit_leader = {
					limit = {
						is_character = GAK_HK416
					}
					unit_leader_event = griffin_commander.2
				}
			}
			custom_effect_tooltip = sp_griffin_digi_mind_update_tt
		}
		enable_equipment_modules = {
			doll_fire_control_component
		}
		sub_unit_bonus = {
			category_tactical_doll = {
				max_organisation = 5
			}
		}
	}

	generic_prototype_rewards = {
		sp_griffin_generic_reward_scientist_xp_1
		sp_griffin_generic_reward_scientist_xp_2
		sp_griffin_generic_reward_scientist_xp_3
		sp_griffin_generic_reward_army_xp_1
		sp_griffin_generic_reward_army_xp_2
		sp_griffin_generic_reward_army_xp_3
		sp_griffin_generic_reward_major_progress_1
		sp_griffin_generic_reward_major_progress_2
		sp_griffin_generic_reward_major_progress_3
		sp_griffin_generic_reward_test_failure_1
		sp_griffin_generic_reward_test_failure_2
		sp_griffin_generic_reward_test_failure_3
		sp_griffin_generic_reward_resource_scarcity
	}
}
sp_griffin_special_armour_piercing_projectile = {
	specialization = specialization_griffin

	project_tags = sp_tag_griffin

	ai_will_do = {
		base = 1
	}

	allowed = {
		always = yes
	}
	
	available = {
		FROM = {
			has_tech = tactical_doll1
		}
	}

	breakthrough_cost = {
		specialization_griffin = 1
	}
	resource_cost = {
		resources = { 
			steel = 4
			tungsten = 2
		}
	}
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			add_design_template_bonus = {
				name = doll_equipment_mg
				uses = 1
				cost_factor = 1
				equipment = doll_equipment_mg
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = tactical_equipment_heavy8	
			}
		}
		enable_equipment_modules = {
			doll_laboratorial_special_armour_piercing_projectile
		}
	}

	generic_prototype_rewards = {
		sp_griffin_generic_reward_scientist_xp_1
		sp_griffin_generic_reward_scientist_xp_2
		sp_griffin_generic_reward_scientist_xp_3
		sp_griffin_generic_reward_army_xp_1
		sp_griffin_generic_reward_army_xp_2
		sp_griffin_generic_reward_army_xp_3
		sp_griffin_generic_reward_major_progress_1
		sp_griffin_generic_reward_major_progress_2
		sp_griffin_generic_reward_major_progress_3
		sp_griffin_generic_reward_test_failure_1
		sp_griffin_generic_reward_test_failure_2
		sp_griffin_generic_reward_test_failure_3
		sp_griffin_generic_reward_resource_scarcity
	}
}

sp_griffin_amphibious_tactical_doll = {
	specialization = specialization_griffin

	project_tags = sp_tag_griffin

	ai_will_do = {
		base = 1
	}

	allowed = {
		always = yes
	}
	
	available = {
		FROM = {
			has_tech = tactical_doll1
		}
	}

	breakthrough_cost = {
		specialization_griffin = 1
	}
	resource_cost = {
		resources = { 
			steel = 4
		}
	}
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			add_design_template_bonus = {
				name = sp_griffin_amphibious_tactical_doll
				uses = 1
				cost_factor = 1
				equipment = doll_equipment_amphibious
			}
		}
		enable_equipments = {
			doll_equipment_amphibious_0
		}
		enable_subunits = {
			tactical_doll_amphibious
		}
	}

	generic_prototype_rewards = {
		sp_griffin_generic_reward_scientist_xp_1
		sp_griffin_generic_reward_scientist_xp_2
		sp_griffin_generic_reward_scientist_xp_3
		sp_griffin_generic_reward_army_xp_1
		sp_griffin_generic_reward_army_xp_2
		sp_griffin_generic_reward_army_xp_3
		sp_griffin_generic_reward_major_progress_1
		sp_griffin_generic_reward_major_progress_2
		sp_griffin_generic_reward_major_progress_3
		sp_griffin_generic_reward_test_failure_1
		sp_griffin_generic_reward_test_failure_2
		sp_griffin_generic_reward_test_failure_3
		sp_griffin_generic_reward_resource_scarcity
	}
	unique_prototype_rewards = {
		sp_griffin_reward_amphibious_tactical_doll = {
			fire_only_once = yes

			threshold = { 
				min = 10
				max = 50
			}

			weight = {
				base = 4
			}

			option = {
				token = sp_griffin_reward_option_amphibious_tactical_doll_reliability
				
				iteration_output = {
					equipment_bonus = {
						doll_equipment_amphibious_0 = {
							reliability = 0.1
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_amphibious_tactical_doll_ic
				
				iteration_output = {
					equipment_bonus = {
						doll_equipment_amphibious_0 = {
							build_cost_ic = -0.05
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_amphibious_tactical_doll_defence
				
				iteration_output = {
					equipment_bonus = {
						doll_equipment_amphibious_0 = {
							build_cost_ic = 0.1
							hardness = 0.5
						}
					}
				}
			}
		}
		sp_griffin_reward_amphibious_tactical_doll_unit = {
			fire_only_once = yes

			threshold = { 
				min = 30
				max = 90
			}

			weight = {
				base = 4
			}

			option = {
				token = sp_griffin_reward_option_amphibious_tactical_doll_attack
				
				iteration_output = {
					sub_unit_bonus = {
						tactical_doll_amphibious = {
							soft_attack = 0.1
							hard_attack = 0.2
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_amphibious_tactical_doll_org
				
				iteration_output = {
					sub_unit_bonus = {
						tactical_doll_amphibious = {
							max_organisation = 10
							max_strength = 0.5
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_amphibious_tactical_doll_amphibious
				
				iteration_output = {
					sub_unit_bonus = {
						tactical_doll_amphibious = {
							marsh = {
								attack = 0.15
							}
							river = {
								attack = 0.15
							}
							amphibious = {
								attack = 0.1
							}
						}
					}
				}
			}
		}
	}
}
sp_griffin_airborne_fairy = {
	specialization = specialization_griffin

	project_tags = sp_tag_griffin

	ai_will_do = {
		base = 1
	}

	allowed = {
		always = yes
	}
	
	available = {
		FROM = {
			has_tech = tactical_doll1
		}
	}

	breakthrough_cost = {
		specialization_griffin = 1
	}
	resource_cost = {
		resources = { 
			aluminium = 3
		}
	}
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			add_design_template_bonus = {
				name = sp_griffin_parachuted_tactical_doll
				uses = 1
				cost_factor = 1
				equipment = doll_equipment_parachuted
			}
		}
		enable_equipments = {
			doll_equipment_parachuted_0
			airborne_fairy_0
		}
		enable_subunits = {
			tactical_doll_parachuted
		}
	}

	generic_prototype_rewards = {
		sp_griffin_generic_reward_scientist_xp_1
		sp_griffin_generic_reward_scientist_xp_2
		sp_griffin_generic_reward_scientist_xp_3
		sp_griffin_generic_reward_army_xp_1
		sp_griffin_generic_reward_army_xp_2
		sp_griffin_generic_reward_army_xp_3
		sp_griffin_generic_reward_major_progress_1
		sp_griffin_generic_reward_major_progress_2
		sp_griffin_generic_reward_major_progress_3
		sp_griffin_generic_reward_test_failure_1
		sp_griffin_generic_reward_test_failure_2
		sp_griffin_generic_reward_test_failure_3
		sp_griffin_generic_reward_resource_scarcity
	}
	unique_prototype_rewards = {
		sp_griffin_reward_airborne_fairy_failure = {
			fire_only_once = yes

			threshold = { 
				min = 10
				max = 50
			}

			weight = {
				base = 1
			}

			option = {
				token = sp_griffin_reward_option_airborne_fairy_improve
				
				iteration_output = {
					equipment_bonus = {
						airborne_fairy_0 = {
							reliability = 0.05
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_doll_equipment_parachuted_improve
				
				iteration_output = {
					equipment_bonus = {
						doll_equipment_parachuted_0 = {
							hardness = -0.5
							build_cost_ic = -0.2
						}
					}
				}
			}
		}

		sp_griffin_reward_airborne_fairy_succession = {
			fire_only_once = yes

			threshold = { 
				min = 20
				max = 60
			}

			weight = {
				base = 4
			}

			option = {
				token = sp_griffin_reward_option_airborne_fairy_attack
				
				iteration_output = {
					sub_unit_bonus = {
						tactical_doll_parachuted = {
							air_attack = 0.6
							soft_attack = 0.1
						}
					}
					equipment_bonus = {
						airborne_fairy_0 = {
							build_cost_ic = 0.2
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_tactical_doll_parachuted_org
				
				iteration_output = {
					sub_unit_bonus = {
						tactical_doll_parachuted = {
							max_organisation = 10
							max_strength = 0.5
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_tactical_doll_parachuted_attack
				
				iteration_output = {
					sub_unit_bonus = {
						tactical_doll_parachuted = {
							soft_attack = 0.1
							hard_attack = 0.2
						}
					}
					equipment_bonus = {
						doll_equipment_parachuted = {
							build_cost_ic = 0.1
						}
					}
				}
			}
		}
	}
}

sp_griffin_IOP_Gustaf = {
	specialization = specialization_griffin

	project_tags = sp_tag_griffin
	allowed = {
		always = yes
	}
	available = {
		FROM = {
			has_tech = ATW_tech
		}
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.medium

	breakthrough_cost = {
		specialization_griffin = 1
	}

	resource_cost = {
		resources = { 
			steel = 10
			tungsten = 4
			chromium = 4
		}
	}
	
	project_output = {
		enable_equipments = {
			IOP_gustaf_equipment_0
		}

		enable_subunits = {
			IOP_gustaf_unit
		}
	}

	generic_prototype_rewards = {
		sp_griffin_generic_reward_scientist_xp_1
		sp_griffin_generic_reward_scientist_xp_2
		sp_griffin_generic_reward_scientist_xp_3
		sp_griffin_generic_reward_army_xp_1
		sp_griffin_generic_reward_army_xp_2
		sp_griffin_generic_reward_army_xp_3
		sp_griffin_generic_reward_major_progress_1
		sp_griffin_generic_reward_major_progress_2
		sp_griffin_generic_reward_major_progress_3
		sp_griffin_generic_reward_test_failure_1
		sp_griffin_generic_reward_test_failure_2
		sp_griffin_generic_reward_test_failure_3
		sp_griffin_generic_reward_resource_scarcity
	}
	unique_prototype_rewards = {

	}
}

sp_griffin_third_generation_tactical_doll = {
	specialization = specialization_griffin

	project_tags = sp_tag_griffin

	ai_will_do = {
		base = 1
	}

	allowed = {
		always = yes
	}
	
	available = {
		FROM = {
			has_tech = tactical_doll2
		}
	}
	special_project_parent = {
		sp_griffin_digi_mind_update
	}
	breakthrough_cost = {
		specialization_griffin = 2
	}
	resource_cost = {
		resources = { 
			steel = 5
		}
	}
	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large
	
	project_output = {
		country_effects = {
			add_to_variable = {
    			GAK_unlocked_number_var = 1
    		}
			add_design_template_bonus = {
				name = sp_griffin_third_generation_tactical_doll
				uses = 1
				cost_factor = 1
				equipment = doll_equipment_third_generation
			}
			add_field_marshal_role = {
				character = "GAK_RO635"
				skill = 5
				attack_skill = 4
				defense_skill = 3
				planning_skill = 5
				logistics_skill = 4
				traits = { infantry_officer Anti_rain }
			}
			random_unit_leader = {
				limit = {
					is_character = GAK_RO635
				}
				set_unit_leader_flag = {
					flag = GAK_has_medals_number
					value = 0
				}
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = tactical_doll3	
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = tactical_doll4
			}
		}
		enable_equipments = {
			doll_equipment_third_generation_0
		}
		enable_subunits = {
			tactical_doll_third_generation
		}
	}

	generic_prototype_rewards = {
		sp_griffin_generic_reward_scientist_xp_1
		sp_griffin_generic_reward_scientist_xp_2
		sp_griffin_generic_reward_scientist_xp_3
		sp_griffin_generic_reward_army_xp_1
		sp_griffin_generic_reward_army_xp_2
		sp_griffin_generic_reward_army_xp_3
		sp_griffin_generic_reward_major_progress_1
		sp_griffin_generic_reward_major_progress_2
		sp_griffin_generic_reward_major_progress_3
		sp_griffin_generic_reward_test_failure_1
		sp_griffin_generic_reward_test_failure_2
		sp_griffin_generic_reward_test_failure_3
		sp_griffin_generic_reward_resource_scarcity
	}
	unique_prototype_rewards = {
		sp_griffin_reward_third_generation_tactical_doll_terrain = {
			fire_only_once = yes

			threshold = { 
				min = 10
				max = 40
			}

			weight = {
				base = 4
			}

			option = {
				token = sp_griffin_reward_option_third_generation_tactical_doll_terrain_all
				
				iteration_output = {
					equipment_bonus = {
						doll_equipment_third_generation_0 = {
							soft_attack = 0.1
							hard_attack = 0.05
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_third_generation_tactical_doll_terrain_mountainous
				
				iteration_output = {
					sub_unit_bonus = {
						tactical_doll_third_generation = {
							hills = {
								attack = 0.15
								defence = 0.1
								movement = 0.1
							}
							mountain = {
								attack = 0.25
								defence = 0.15
								movement = 0.15
							}
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_third_generation_tactical_doll_terrain_forest
				
				iteration_output = {
					sub_unit_bonus = {
						tactical_doll_third_generation = {
							forest = {
								attack = 0.15
								defence = 0.1
								movement = 0.1
							}
							jungle = {
								attack = 0.25
								defence = 0.15
								movement = 0.15
							}
						}
					}
				}
			}
		}
		sp_griffin_reward_third_generation_tactical_doll_body = {
			fire_only_once = yes

			threshold = { 
				min = 30
				max = 70
			}

			weight = {
				base = 4
			}

			option = {
				token = sp_griffin_reward_option_third_generation_tactical_doll_body_light
				
				iteration_output = {
					equipment_bonus = {
						doll_equipment_third_generation_0 = {
							build_cost_ic = -0.1
							maximum_speed = 0.1
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_third_generation_tactical_doll_body_heavy
				
				iteration_output = {
					equipment_bonus = {
						doll_equipment_third_generation_0 = {
							build_cost_ic = 0.15
							hardness = 0.05
							armor_value = 0.15
						}
					}
				}
			}
		}
		sp_griffin_reward_third_generation_tactical_doll_digi_mind = {
			fire_only_once = yes

			threshold = { 
				min = 50
				max = 90
			}

			weight = {
				base = 4
			}

			option = {
				token = sp_griffin_reward_option_third_generation_tactical_doll_digi_mind_only
				
				iteration_output = {
					equipment_bonus = {
						doll_equipment_third_generation_0 = {
							breakthrough = 0.2
							defense = 0.2
						}
					}
				}
			}

			option = {
				token = sp_griffin_reward_option_third_generation_tactical_doll_digi_mind_universal
				
				iteration_output = {
					sub_unit_bonus = {
						category_tactical_doll = {
							breakthrough = 0.1
							defense = 0.1
						}
					}
				}
			}
		}
	}
}